# Generated by Django 5.0.7 on 2024-07-16 14:33

import client.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100)),
                ('home_phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', 'Enter a valid phone number.')])),
                ('address', models.CharField(max_length=255)),
                ('occupation', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField()),
                ('id_number', models.CharField(max_length=20, unique=True)),
                ('work_phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', 'Enter a valid phone number.')])),
                ('date_joined', models.DateField()),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_user', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Absence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('reason', models.TextField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='absences', to='client.client')),
            ],
        ),
        migrations.CreateModel(
            name='ClientImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_path', models.ImageField(upload_to='client_images/')),
                ('date', models.DateField()),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='client.client')),
            ],
        ),
        migrations.CreateModel(
            name='EmergencyContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', 'Enter a valid phone number.')])),
                ('relationship', models.CharField(max_length=50)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emergency_contacts', to='client.client')),
            ],
        ),
        migrations.CreateModel(
            name='FitnessAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('blood_pressure', models.CharField(max_length=20)),
                ('resting_heart_rate', models.CharField(max_length=20, validators=[client.models.validate_non_negative])),
                ('high_estimate_heart_rate', models.CharField(max_length=20, validators=[client.models.validate_non_negative])),
                ('cardiovascular_test_name', models.CharField(max_length=100)),
                ('cardiovascular_test_result', models.CharField(max_length=100)),
                ('muscle_strength_bench_press', models.CharField(max_length=100)),
                ('muscle_strength_leg_press', models.CharField(max_length=100)),
                ('muscle_strength_advanced_1rm', models.CharField(max_length=100)),
                ('flexibility_zipper_stretch', models.CharField(max_length=100)),
                ('flexibility_sit_and_reach', models.CharField(max_length=100)),
                ('push_ups', models.CharField(max_length=100)),
                ('sit_ups', models.CharField(max_length=100)),
                ('walk_test', models.CharField(max_length=100)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fitness_assessments', to='client.client')),
            ],
        ),
        migrations.CreateModel(
            name='HealthHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asthma', models.JSONField()),
                ('respiratory_conditions', models.JSONField()),
                ('diabetes', models.JSONField()),
                ('epilepsy', models.JSONField()),
                ('osteoporosis', models.JSONField()),
                ('other_conditions', models.JSONField()),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_history', to='client.client')),
            ],
        ),
        migrations.CreateModel(
            name='MedicalInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('physician', models.CharField(max_length=100)),
                ('physician_phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', 'Enter a valid phone number.')])),
                ('under_care', models.BooleanField()),
                ('care_reason', models.TextField(blank=True, null=True)),
                ('taking_medication', models.BooleanField()),
                ('medication_list', models.TextField(blank=True, null=True)),
                ('allergies', models.TextField(blank=True, null=True)),
                ('high_blood_pressure', models.BooleanField()),
                ('bone_joint_problem', models.BooleanField()),
                ('vigorous_exercise', models.BooleanField()),
                ('chest_pain', models.BooleanField()),
                ('smoking_habits', models.TextField()),
                ('family_history', models.JSONField()),
                ('lifestyle_factors', models.JSONField()),
                ('cardiovascular_conditions', models.JSONField()),
                ('work_exercise_habits', models.JSONField()),
                ('nutritional_info', models.JSONField()),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_information', to='client.client')),
            ],
        ),
        migrations.CreateModel(
            name='MuscleInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('muscle_group', models.CharField(max_length=100)),
                ('size', models.CharField(max_length=100)),
                ('comments', models.TextField(blank=True, null=True)),
                ('date', models.DateField()),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='muscle_information', to='client.client')),
            ],
        ),
        migrations.CreateModel(
            name='TrainingPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('level', models.CharField(max_length=50)),
                ('frequency', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(7)])),
                ('program', models.TextField()),
                ('date', models.DateField()),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_plans', to='client.client')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_training_plans', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_training_plans', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('day', models.CharField(max_length=20)),
                ('exercise_name', models.CharField(max_length=100)),
                ('reps', models.PositiveIntegerField(validators=[client.models.validate_non_negative])),
                ('sets', models.PositiveIntegerField(validators=[client.models.validate_non_negative])),
                ('rest', models.PositiveIntegerField(validators=[client.models.validate_non_negative])),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_exercise', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_exercise', to=settings.AUTH_USER_MODEL)),
                ('training_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercises', to='client.trainingplan')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
